double dg_dt(int i, int j, int t)//+
{
    return 1;
}

double dg_dx1(int i, int j, int t)//+
{
    double x1 = i * h1;
    double x2 = j * h2;
    double tt = t * tau;

    return (1./ rho(i,j,t)) * 2 * M_PI * (-sin(2*M_PI * x1)) * (sin(2*M_PI*x2) + 3./2.) * exp(tt);
}

double dg_dx2(int i, int j, int t)//+
{
    double x1 = i * h1;
    double x2 = j * h2;
    double tt = t * tau;

    return (1./ rho(i,j,t)) * 2 * M_PI * (cos(2*M_PI * x1) + 3./2.) * (cos(2*M_PI*x2)) * exp(tt);
}

double du1_dx1(int i, int j, int t)
{
    double x1 = i * h1;
    double x2 = j * h2;
    double tt = t * tau;

    return 2* M_PI * cos(2*M_PI*x1) * sin(2*M_PI*x2) * exp(tt);
}

double du1_dx2(int i, int j, int t)
{
    double x1 = i * h1;
    double x2 = j * h2;
    double tt = t * tau;

    return 2* M_PI * sin(2*M_PI*x1) * cos(2*M_PI*x2) * exp(tt);
}

double du2_dx1(int i, int j, int t)
{
    double x1 = i * h1;
    double x2 = j * h2;
    double tt = t * tau;

    return 2* M_PI * cos(2*M_PI*x1) * sin(2*M_PI*x2) * exp(-tt);
}

double du2_dx2(int i, int j, int t)
{
    double x1 = i * h1;
    double x2 = j * h2;
    double tt = t * tau;

    return 2* M_PI * sin(2*M_PI*x1) * cos(2*M_PI*x2) * exp(-tt);
}

double du1_dt(int i, int j, int t)
{
    double x1 = i * h1;
    double x2 = j * h2;
    double tt = t * tau;

    return u1(i,j,t);
}


double du2_dt(int i, int j, int t)
{
    double x1 = i * h1;
    double x2 = j * h2;
    double tt = t * tau;

    return -u2(i,j,t);
}







double u1(int i, int j, int t)//t-номер временного слоя, ij-номера координат на сетке
{
    double x1 = i * h1;
    double x2 = j * h2;
    double tt = t * tau;

    return sin (2*M_PI * x1) 
            * sin (2 * M_PI * x2)
            * exp(tt);
    
}

double u2(int i, int j, int t)//t-номер временного слоя, ij-номера координат на сетке
{
    double x1 = i * h1;
    double x2 = j * h2;
    double tt = t * tau;
    
    return sin (2*M_PI * x1) 
            * sin (2 * M_PI * x2)
            * exp(-tt);
}

double rho(int i, int j, int t)//t-номер временного слоя, ij-номера координат на сетке
{
    double x1 = i * h1;
    double x2 = j * h2;
    double tt = t * tau;

    return (cos(2 * M_PI * x1) + 3./2.) 
         * (sin(2 * M_PI * x2) + 3./2.)
         * exp(tt);
    
}


double F1 (int i, int j, int t)
{
    double x1 = i * h1;
    double x2 = j * h2;
    double tt = t * tau;
    
    return dg_dt(i,j,t) 
            + u1(i,j,t) * dg_dx1(i,j,t) 
            + u2(i,j,t) * dg_dx2(i,j,t)
            + du1_dx1(i,j,t)
            + du2_dx2(i,j,t)
            ;

}

double F2 (int i, int j, int t)
{
    double x1 = i * h1;
    double x2 = j * h2;
    double tt = t * tau;


    return du1_dt(i,j,t)
            + u1(i,j,t) * du1_dx1(i,j,t)
            + u2(i,j,t) * du1_dx2(i,j,t)
            + c * dg_dx1(i,j,t)
            - (mu / rho(i,j,t)) * (4./3.*(-4 * M_PI * M_PI * u1(i,j,t)) 
                                            + (-4*M_PI*M_PI * u1(i,j,t)) 
                                            + 1./3. * cos(2*M_PI*x1) * cos(2*M_PI*x2) * (4*M_PI*M_PI) * exp(-tt)
                                )
    
        ;
    

}


double F3 (int i, int j, int t)
{
    double x1 = i * h1;
    double x2 = j * h2;
    double tt = t * tau;


    return du2_dt(i,j,t)
            + u1(i,j,t) * du2_dx1(i,j,t)
            + u2(i,j,t) * du2_dx2(i,j,t)
            + c * dg_dx2(i,j,t)
            - mu / rho(i,j,t) * (4./3.*(-4 * M_PI * M_PI * u2(i,j,t)) 
                                            + (-4*M_PI*M_PI * u2(i,j,t)) 
                                            + 1./3. * cos(2*M_PI*x1) * cos(2*M_PI*x2) * (4*M_PI*M_PI) * exp(tt)
                                )
    
        ;
    

}